#pragma hdrstop
#pragma argsused

#ifdef _WIN32
#include <tchar.h>
#else
  typedef char _TCHAR;
  #define _tmain main
#endif

#include <stdio.h>
#include <fstream>
#include <iostream>
#include <string.h>
#include <cstring>
#include <conio.h>
#include <math.h>
using namespace std;
  /*	Определить функцию, позволяющую определить лежат ли
	какие-либо две точки по одну сторону от прямой.
	Даны координаты вершин двух треугольников.
	Определить, лежит ли одни из них внутри другого. */

class Point {
  public:
	double x,y;
	Point(double _x, double _x){x=_x;y=_y}; // конструктор класса
	double getX(){return x};
	double getY(){return y};
};

class Line {
  public:
	double k,b; // коэффициенты прямой
	Line(Point p1,Point p2) {
	  k = (p2.getY() - p1.getY()) / (p2.getX() - p1.getX());
	  b = (p1.getY() - ( (p2.getY() - p1.getY())*p1.getX() /
		 (p2.getX() - p1.getX()) ) );
	}

	contains(Point p){
	   return p.getY() - this.k*p1.getX()+this.b;
	}
}

int _tmain(int argc, _TCHAR* argv[]){

  p1 = new Point(1,1);
  p2 = new Point(2,2);
  l = new Line(p1,p2);

  p3 = new Point(3,0);
  cout<<l.contains_to(p3);
  p4 = new Point(0,3);
  cout<<l.contains_to(p4);


//  ifstream in ("input.txt");
//  if (!in){
//	throw runtime_error("Can't open file");
//  }
//  ofstream out("output.txt");
//  string line;
//  while(getline(in, line)){
//   out<<process_line(line)<<std::endl;
//  }
//  in.close();
//  out.close();
//  cout<<"File is written!"<<endl;
  system("pause");
  return 0;
}

